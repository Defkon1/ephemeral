### YamlMime:ManagedReference
items:
- uid: Marsop.Ephemeral.IntervalSetExtensions
  commentId: T:Marsop.Ephemeral.IntervalSetExtensions
  id: IntervalSetExtensions
  parent: Marsop.Ephemeral
  children:
  - Marsop.Ephemeral.IntervalSetExtensions.Consolidate(Marsop.Ephemeral.IDisjointIntervalSet)
  - Marsop.Ephemeral.IntervalSetExtensions.Covers(Marsop.Ephemeral.IDisjointIntervalSet,System.DateTimeOffset)
  - Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  - Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IDisjointIntervalSet)
  - Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  langs:
  - csharp
  - vb
  name: IntervalSetExtensions
  nameWithType: IntervalSetExtensions
  fullName: Marsop.Ephemeral.IntervalSetExtensions
  type: Class
  source:
    remote:
      path: IntervalSetExtensions.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: IntervalSetExtensions
    path: IntervalSetExtensions.cs
    startLine: 7
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  syntax:
    content: public static class IntervalSetExtensions
    content.vb: Public Module IntervalSetExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Marsop.Ephemeral.IntervalSetExtensions.Covers(Marsop.Ephemeral.IDisjointIntervalSet,System.DateTimeOffset)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Covers(Marsop.Ephemeral.IDisjointIntervalSet,System.DateTimeOffset)
  id: Covers(Marsop.Ephemeral.IDisjointIntervalSet,System.DateTimeOffset)
  isExtensionMethod: true
  parent: Marsop.Ephemeral.IntervalSetExtensions
  langs:
  - csharp
  - vb
  name: Covers(IDisjointIntervalSet, DateTimeOffset)
  nameWithType: IntervalSetExtensions.Covers(IDisjointIntervalSet, DateTimeOffset)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Covers(Marsop.Ephemeral.IDisjointIntervalSet, System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: IntervalSetExtensions.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: Covers
    path: IntervalSetExtensions.cs
    startLine: 13
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  summary: "\nChecks if the timestamp is included in the interval set\n"
  example: []
  syntax:
    content: public static bool Covers(this IDisjointIntervalSet set, DateTimeOffset timestamp)
    parameters:
    - id: set
      type: Marsop.Ephemeral.IDisjointIntervalSet
    - id: timestamp
      type: System.DateTimeOffset
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Covers(set As IDisjointIntervalSet, timestamp As DateTimeOffset) As Boolean
  overload: Marsop.Ephemeral.IntervalSetExtensions.Covers*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IDisjointIntervalSet)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IDisjointIntervalSet)
  id: Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IDisjointIntervalSet)
  isExtensionMethod: true
  parent: Marsop.Ephemeral.IntervalSetExtensions
  langs:
  - csharp
  - vb
  name: Join(IDisjointIntervalSet, IDisjointIntervalSet)
  nameWithType: IntervalSetExtensions.Join(IDisjointIntervalSet, IDisjointIntervalSet)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet, Marsop.Ephemeral.IDisjointIntervalSet)
  type: Method
  source:
    remote:
      path: IntervalSetExtensions.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: Join
    path: IntervalSetExtensions.cs
    startLine: 16
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  syntax:
    content: public static IDisjointIntervalSet Join(this IDisjointIntervalSet set, IDisjointIntervalSet other)
    parameters:
    - id: set
      type: Marsop.Ephemeral.IDisjointIntervalSet
    - id: other
      type: Marsop.Ephemeral.IDisjointIntervalSet
    return:
      type: Marsop.Ephemeral.IDisjointIntervalSet
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Join(set As IDisjointIntervalSet, other As IDisjointIntervalSet) As IDisjointIntervalSet
  overload: Marsop.Ephemeral.IntervalSetExtensions.Join*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  id: Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  isExtensionMethod: true
  parent: Marsop.Ephemeral.IntervalSetExtensions
  langs:
  - csharp
  - vb
  name: Join(IDisjointIntervalSet, IInterval)
  nameWithType: IntervalSetExtensions.Join(IDisjointIntervalSet, IInterval)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet, Marsop.Ephemeral.IInterval)
  type: Method
  source:
    remote:
      path: IntervalSetExtensions.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: Join
    path: IntervalSetExtensions.cs
    startLine: 23
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  syntax:
    content: public static IDisjointIntervalSet Join(this IDisjointIntervalSet set, IInterval interval)
    parameters:
    - id: set
      type: Marsop.Ephemeral.IDisjointIntervalSet
    - id: interval
      type: Marsop.Ephemeral.IInterval
    return:
      type: Marsop.Ephemeral.IDisjointIntervalSet
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Join(set As IDisjointIntervalSet, interval As IInterval) As IDisjointIntervalSet
  overload: Marsop.Ephemeral.IntervalSetExtensions.Join*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  id: Intersect(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  isExtensionMethod: true
  parent: Marsop.Ephemeral.IntervalSetExtensions
  langs:
  - csharp
  - vb
  name: Intersect(IDisjointIntervalSet, IInterval)
  nameWithType: IntervalSetExtensions.Intersect(IDisjointIntervalSet, IInterval)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IDisjointIntervalSet, Marsop.Ephemeral.IInterval)
  type: Method
  source:
    remote:
      path: IntervalSetExtensions.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: Intersect
    path: IntervalSetExtensions.cs
    startLine: 40
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  syntax:
    content: public static IDisjointIntervalSet Intersect(this IDisjointIntervalSet set, IInterval interval)
    parameters:
    - id: set
      type: Marsop.Ephemeral.IDisjointIntervalSet
    - id: interval
      type: Marsop.Ephemeral.IInterval
    return:
      type: Marsop.Ephemeral.IDisjointIntervalSet
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Intersect(set As IDisjointIntervalSet, interval As IInterval) As IDisjointIntervalSet
  overload: Marsop.Ephemeral.IntervalSetExtensions.Intersect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Marsop.Ephemeral.IntervalSetExtensions.Consolidate(Marsop.Ephemeral.IDisjointIntervalSet)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Consolidate(Marsop.Ephemeral.IDisjointIntervalSet)
  id: Consolidate(Marsop.Ephemeral.IDisjointIntervalSet)
  isExtensionMethod: true
  parent: Marsop.Ephemeral.IntervalSetExtensions
  langs:
  - csharp
  - vb
  name: Consolidate(IDisjointIntervalSet)
  nameWithType: IntervalSetExtensions.Consolidate(IDisjointIntervalSet)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Consolidate(Marsop.Ephemeral.IDisjointIntervalSet)
  type: Method
  source:
    remote:
      path: IntervalSetExtensions.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: Consolidate
    path: IntervalSetExtensions.cs
    startLine: 54
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  summary: "\nJoins adjacent intervals.\n"
  example: []
  syntax:
    content: public static IDisjointIntervalSet Consolidate(this IDisjointIntervalSet set)
    parameters:
    - id: set
      type: Marsop.Ephemeral.IDisjointIntervalSet
    return:
      type: Marsop.Ephemeral.IDisjointIntervalSet
      description: new set with the minimum amount of intervals
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Consolidate(set As IDisjointIntervalSet) As IDisjointIntervalSet
  overload: Marsop.Ephemeral.IntervalSetExtensions.Consolidate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Marsop.Ephemeral
  commentId: N:Marsop.Ephemeral
  name: Marsop.Ephemeral
  nameWithType: Marsop.Ephemeral
  fullName: Marsop.Ephemeral
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Marsop.Ephemeral.IntervalSetExtensions.Covers*
  commentId: Overload:Marsop.Ephemeral.IntervalSetExtensions.Covers
  name: Covers
  nameWithType: IntervalSetExtensions.Covers
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Covers
- uid: Marsop.Ephemeral.IDisjointIntervalSet
  commentId: T:Marsop.Ephemeral.IDisjointIntervalSet
  parent: Marsop.Ephemeral
  name: IDisjointIntervalSet
  nameWithType: IDisjointIntervalSet
  fullName: Marsop.Ephemeral.IDisjointIntervalSet
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Marsop.Ephemeral.IntervalSetExtensions.Join*
  commentId: Overload:Marsop.Ephemeral.IntervalSetExtensions.Join
  name: Join
  nameWithType: IntervalSetExtensions.Join
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Join
- uid: Marsop.Ephemeral.IInterval
  commentId: T:Marsop.Ephemeral.IInterval
  parent: Marsop.Ephemeral
  name: IInterval
  nameWithType: IInterval
  fullName: Marsop.Ephemeral.IInterval
- uid: Marsop.Ephemeral.IntervalSetExtensions.Intersect*
  commentId: Overload:Marsop.Ephemeral.IntervalSetExtensions.Intersect
  name: Intersect
  nameWithType: IntervalSetExtensions.Intersect
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Intersect
- uid: Marsop.Ephemeral.IntervalSetExtensions.Consolidate*
  commentId: Overload:Marsop.Ephemeral.IntervalSetExtensions.Consolidate
  name: Consolidate
  nameWithType: IntervalSetExtensions.Consolidate
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Consolidate
