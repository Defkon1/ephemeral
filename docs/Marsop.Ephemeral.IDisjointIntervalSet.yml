### YamlMime:ManagedReference
items:
- uid: Marsop.Ephemeral.IDisjointIntervalSet
  commentId: T:Marsop.Ephemeral.IDisjointIntervalSet
  id: IDisjointIntervalSet
  parent: Marsop.Ephemeral
  children:
  - Marsop.Ephemeral.IDisjointIntervalSet.AggregatedDuration
  - Marsop.Ephemeral.IDisjointIntervalSet.End
  - Marsop.Ephemeral.IDisjointIntervalSet.EndIncluded
  - Marsop.Ephemeral.IDisjointIntervalSet.GetBoundingInterval
  - Marsop.Ephemeral.IDisjointIntervalSet.IsContiguous
  - Marsop.Ephemeral.IDisjointIntervalSet.Start
  - Marsop.Ephemeral.IDisjointIntervalSet.StartIncluded
  langs:
  - csharp
  - vb
  name: IDisjointIntervalSet
  nameWithType: IDisjointIntervalSet
  fullName: Marsop.Ephemeral.IDisjointIntervalSet
  type: Interface
  source:
    remote:
      path: Interfaces/IDisjointIntervalSet.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: IDisjointIntervalSet
    path: Interfaces/IDisjointIntervalSet.cs
    startLine: 8
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  summary: "\nCollection of disjoint IIntervals\n"
  example: []
  syntax:
    content: 'public interface IDisjointIntervalSet : IList<IInterval>, ICollection<IInterval>, IEnumerable<IInterval>, IEnumerable'
    content.vb: >-
      Public Interface IDisjointIntervalSet
          Inherits IList(Of IInterval)
  inheritedMembers:
  - System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}.IndexOf(Marsop.Ephemeral.IInterval)
  - System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}.Insert(System.Int32,Marsop.Ephemeral.IInterval)
  - System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}.RemoveAt(System.Int32)
  - System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}.Item(System.Int32)
  - System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Add(Marsop.Ephemeral.IInterval)
  - System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Clear
  - System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Contains(Marsop.Ephemeral.IInterval)
  - System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.CopyTo(Marsop.Ephemeral.IInterval[],System.Int32)
  - System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Remove(Marsop.Ephemeral.IInterval)
  - System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Count
  - System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.IsReadOnly
  - System.Collections.Generic.IEnumerable{Marsop.Ephemeral.IInterval}.GetEnumerator
  extensionMethods:
  - Marsop.Ephemeral.IDisjointIntervalSet.Marsop.Ephemeral.IntervalSetExtensions.Covers(System.DateTimeOffset)
  - Marsop.Ephemeral.IDisjointIntervalSet.Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet)
  - Marsop.Ephemeral.IDisjointIntervalSet.Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IInterval)
  - Marsop.Ephemeral.IDisjointIntervalSet.Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IInterval)
  - Marsop.Ephemeral.IDisjointIntervalSet.Marsop.Ephemeral.IntervalSetExtensions.Consolidate
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Marsop.Ephemeral.IDisjointIntervalSet.IsContiguous
  commentId: P:Marsop.Ephemeral.IDisjointIntervalSet.IsContiguous
  id: IsContiguous
  parent: Marsop.Ephemeral.IDisjointIntervalSet
  langs:
  - csharp
  - vb
  name: IsContiguous
  nameWithType: IDisjointIntervalSet.IsContiguous
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.IsContiguous
  type: Property
  source:
    remote:
      path: Interfaces/IDisjointIntervalSet.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: IsContiguous
    path: Interfaces/IDisjointIntervalSet.cs
    startLine: 13
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  summary: "\nTrue if all the contained intervals are contiguous or if empty\n"
  example: []
  syntax:
    content: bool IsContiguous { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsContiguous As Boolean
  overload: Marsop.Ephemeral.IDisjointIntervalSet.IsContiguous*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Marsop.Ephemeral.IDisjointIntervalSet.AggregatedDuration
  commentId: P:Marsop.Ephemeral.IDisjointIntervalSet.AggregatedDuration
  id: AggregatedDuration
  parent: Marsop.Ephemeral.IDisjointIntervalSet
  langs:
  - csharp
  - vb
  name: AggregatedDuration
  nameWithType: IDisjointIntervalSet.AggregatedDuration
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.AggregatedDuration
  type: Property
  source:
    remote:
      path: Interfaces/IDisjointIntervalSet.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: AggregatedDuration
    path: Interfaces/IDisjointIntervalSet.cs
    startLine: 18
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  summary: "\nSum of durations of each of the enclosed intervals \n"
  example: []
  syntax:
    content: TimeSpan AggregatedDuration { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: ReadOnly Property AggregatedDuration As TimeSpan
  overload: Marsop.Ephemeral.IDisjointIntervalSet.AggregatedDuration*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Marsop.Ephemeral.IDisjointIntervalSet.Start
  commentId: P:Marsop.Ephemeral.IDisjointIntervalSet.Start
  id: Start
  parent: Marsop.Ephemeral.IDisjointIntervalSet
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: IDisjointIntervalSet.Start
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.Start
  type: Property
  source:
    remote:
      path: Interfaces/IDisjointIntervalSet.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: Start
    path: Interfaces/IDisjointIntervalSet.cs
    startLine: 23
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  summary: "\nStart of the earliest contained Interval\n"
  example: []
  syntax:
    content: DateTimeOffset Start { get; }
    parameters: []
    return:
      type: System.DateTimeOffset
    content.vb: ReadOnly Property Start As DateTimeOffset
  overload: Marsop.Ephemeral.IDisjointIntervalSet.Start*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Marsop.Ephemeral.IDisjointIntervalSet.End
  commentId: P:Marsop.Ephemeral.IDisjointIntervalSet.End
  id: End
  parent: Marsop.Ephemeral.IDisjointIntervalSet
  langs:
  - csharp
  - vb
  name: End
  nameWithType: IDisjointIntervalSet.End
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.End
  type: Property
  source:
    remote:
      path: Interfaces/IDisjointIntervalSet.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: End
    path: Interfaces/IDisjointIntervalSet.cs
    startLine: 28
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  summary: "\nEnd of the latest contained Interval\n"
  example: []
  syntax:
    content: DateTimeOffset End { get; }
    parameters: []
    return:
      type: System.DateTimeOffset
    content.vb: ReadOnly Property End As DateTimeOffset
  overload: Marsop.Ephemeral.IDisjointIntervalSet.End*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Marsop.Ephemeral.IDisjointIntervalSet.StartIncluded
  commentId: P:Marsop.Ephemeral.IDisjointIntervalSet.StartIncluded
  id: StartIncluded
  parent: Marsop.Ephemeral.IDisjointIntervalSet
  langs:
  - csharp
  - vb
  name: StartIncluded
  nameWithType: IDisjointIntervalSet.StartIncluded
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.StartIncluded
  type: Property
  source:
    remote:
      path: Interfaces/IDisjointIntervalSet.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: StartIncluded
    path: Interfaces/IDisjointIntervalSet.cs
    startLine: 30
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  syntax:
    content: bool StartIncluded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property StartIncluded As Boolean
  overload: Marsop.Ephemeral.IDisjointIntervalSet.StartIncluded*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Marsop.Ephemeral.IDisjointIntervalSet.EndIncluded
  commentId: P:Marsop.Ephemeral.IDisjointIntervalSet.EndIncluded
  id: EndIncluded
  parent: Marsop.Ephemeral.IDisjointIntervalSet
  langs:
  - csharp
  - vb
  name: EndIncluded
  nameWithType: IDisjointIntervalSet.EndIncluded
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.EndIncluded
  type: Property
  source:
    remote:
      path: Interfaces/IDisjointIntervalSet.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: EndIncluded
    path: Interfaces/IDisjointIntervalSet.cs
    startLine: 32
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  syntax:
    content: bool EndIncluded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property EndIncluded As Boolean
  overload: Marsop.Ephemeral.IDisjointIntervalSet.EndIncluded*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Marsop.Ephemeral.IDisjointIntervalSet.GetBoundingInterval
  commentId: M:Marsop.Ephemeral.IDisjointIntervalSet.GetBoundingInterval
  id: GetBoundingInterval
  parent: Marsop.Ephemeral.IDisjointIntervalSet
  langs:
  - csharp
  - vb
  name: GetBoundingInterval()
  nameWithType: IDisjointIntervalSet.GetBoundingInterval()
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.GetBoundingInterval()
  type: Method
  source:
    remote:
      path: Interfaces/IDisjointIntervalSet.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: GetBoundingInterval
    path: Interfaces/IDisjointIntervalSet.cs
    startLine: 38
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  summary: "\nMinimum interval that contais all the intervals of the set.\n"
  example: []
  syntax:
    content: IInterval GetBoundingInterval()
    return:
      type: Marsop.Ephemeral.IInterval
      description: ''
    content.vb: Function GetBoundingInterval As IInterval
  overload: Marsop.Ephemeral.IDisjointIntervalSet.GetBoundingInterval*
references:
- uid: Marsop.Ephemeral
  commentId: N:Marsop.Ephemeral
  name: Marsop.Ephemeral
  nameWithType: Marsop.Ephemeral
  fullName: Marsop.Ephemeral
- uid: System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}.IndexOf(Marsop.Ephemeral.IInterval)
  commentId: M:System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}.IndexOf(Marsop.Ephemeral.IInterval)
  parent: System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  name: IndexOf(IInterval)
  nameWithType: IList<IInterval>.IndexOf(IInterval)
  fullName: System.Collections.Generic.IList<Marsop.Ephemeral.IInterval>.IndexOf(Marsop.Ephemeral.IInterval)
  nameWithType.vb: IList(Of IInterval).IndexOf(IInterval)
  fullName.vb: System.Collections.Generic.IList(Of Marsop.Ephemeral.IInterval).IndexOf(Marsop.Ephemeral.IInterval)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<IInterval>.IndexOf
    fullName: System.Collections.Generic.IList<Marsop.Ephemeral.IInterval>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of IInterval).IndexOf
    fullName: System.Collections.Generic.IList(Of Marsop.Ephemeral.IInterval).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}.Insert(System.Int32,Marsop.Ephemeral.IInterval)
  commentId: M:System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}.Insert(System.Int32,Marsop.Ephemeral.IInterval)
  parent: System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, IInterval)
  nameWithType: IList<IInterval>.Insert(Int32, IInterval)
  fullName: System.Collections.Generic.IList<Marsop.Ephemeral.IInterval>.Insert(System.Int32, Marsop.Ephemeral.IInterval)
  nameWithType.vb: IList(Of IInterval).Insert(Int32, IInterval)
  fullName.vb: System.Collections.Generic.IList(Of Marsop.Ephemeral.IInterval).Insert(System.Int32, Marsop.Ephemeral.IInterval)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<IInterval>.Insert
    fullName: System.Collections.Generic.IList<Marsop.Ephemeral.IInterval>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of IInterval).Insert
    fullName: System.Collections.Generic.IList(Of Marsop.Ephemeral.IInterval).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: IList<IInterval>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<Marsop.Ephemeral.IInterval>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of IInterval).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of Marsop.Ephemeral.IInterval).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<IInterval>.RemoveAt
    fullName: System.Collections.Generic.IList<Marsop.Ephemeral.IInterval>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of IInterval).RemoveAt
    fullName: System.Collections.Generic.IList(Of Marsop.Ephemeral.IInterval).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}.Item(System.Int32)
  parent: System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<IInterval>.Item[Int32]
  fullName: System.Collections.Generic.IList<Marsop.Ephemeral.IInterval>.Item[System.Int32]
  nameWithType.vb: IList(Of IInterval).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of Marsop.Ephemeral.IInterval).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<IInterval>.Item
    fullName: System.Collections.Generic.IList<Marsop.Ephemeral.IInterval>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of IInterval).Item
    fullName: System.Collections.Generic.IList(Of Marsop.Ephemeral.IInterval).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Add(Marsop.Ephemeral.IInterval)
  commentId: M:System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Add(Marsop.Ephemeral.IInterval)
  parent: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(IInterval)
  nameWithType: ICollection<IInterval>.Add(IInterval)
  fullName: System.Collections.Generic.ICollection<Marsop.Ephemeral.IInterval>.Add(Marsop.Ephemeral.IInterval)
  nameWithType.vb: ICollection(Of IInterval).Add(IInterval)
  fullName.vb: System.Collections.Generic.ICollection(Of Marsop.Ephemeral.IInterval).Add(Marsop.Ephemeral.IInterval)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<IInterval>.Add
    fullName: System.Collections.Generic.ICollection<Marsop.Ephemeral.IInterval>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of IInterval).Add
    fullName: System.Collections.Generic.ICollection(Of Marsop.Ephemeral.IInterval).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Clear
  commentId: M:System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Clear
  parent: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<IInterval>.Clear()
  fullName: System.Collections.Generic.ICollection<Marsop.Ephemeral.IInterval>.Clear()
  nameWithType.vb: ICollection(Of IInterval).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of Marsop.Ephemeral.IInterval).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<IInterval>.Clear
    fullName: System.Collections.Generic.ICollection<Marsop.Ephemeral.IInterval>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of IInterval).Clear
    fullName: System.Collections.Generic.ICollection(Of Marsop.Ephemeral.IInterval).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Contains(Marsop.Ephemeral.IInterval)
  commentId: M:System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Contains(Marsop.Ephemeral.IInterval)
  parent: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(IInterval)
  nameWithType: ICollection<IInterval>.Contains(IInterval)
  fullName: System.Collections.Generic.ICollection<Marsop.Ephemeral.IInterval>.Contains(Marsop.Ephemeral.IInterval)
  nameWithType.vb: ICollection(Of IInterval).Contains(IInterval)
  fullName.vb: System.Collections.Generic.ICollection(Of Marsop.Ephemeral.IInterval).Contains(Marsop.Ephemeral.IInterval)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<IInterval>.Contains
    fullName: System.Collections.Generic.ICollection<Marsop.Ephemeral.IInterval>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of IInterval).Contains
    fullName: System.Collections.Generic.ICollection(Of Marsop.Ephemeral.IInterval).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.CopyTo(Marsop.Ephemeral.IInterval[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.CopyTo(Marsop.Ephemeral.IInterval[],System.Int32)
  parent: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(IInterval[], Int32)
  nameWithType: ICollection<IInterval>.CopyTo(IInterval[], Int32)
  fullName: System.Collections.Generic.ICollection<Marsop.Ephemeral.IInterval>.CopyTo(Marsop.Ephemeral.IInterval[], System.Int32)
  nameWithType.vb: ICollection(Of IInterval).CopyTo(IInterval(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of Marsop.Ephemeral.IInterval).CopyTo(Marsop.Ephemeral.IInterval(), System.Int32)
  name.vb: CopyTo(IInterval(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<IInterval>.CopyTo
    fullName: System.Collections.Generic.ICollection<Marsop.Ephemeral.IInterval>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of IInterval).CopyTo
    fullName: System.Collections.Generic.ICollection(Of Marsop.Ephemeral.IInterval).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Remove(Marsop.Ephemeral.IInterval)
  commentId: M:System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Remove(Marsop.Ephemeral.IInterval)
  parent: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(IInterval)
  nameWithType: ICollection<IInterval>.Remove(IInterval)
  fullName: System.Collections.Generic.ICollection<Marsop.Ephemeral.IInterval>.Remove(Marsop.Ephemeral.IInterval)
  nameWithType.vb: ICollection(Of IInterval).Remove(IInterval)
  fullName.vb: System.Collections.Generic.ICollection(Of Marsop.Ephemeral.IInterval).Remove(Marsop.Ephemeral.IInterval)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<IInterval>.Remove
    fullName: System.Collections.Generic.ICollection<Marsop.Ephemeral.IInterval>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of IInterval).Remove
    fullName: System.Collections.Generic.ICollection(Of Marsop.Ephemeral.IInterval).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Count
  commentId: P:System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.Count
  parent: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<IInterval>.Count
  fullName: System.Collections.Generic.ICollection<Marsop.Ephemeral.IInterval>.Count
  nameWithType.vb: ICollection(Of IInterval).Count
  fullName.vb: System.Collections.Generic.ICollection(Of Marsop.Ephemeral.IInterval).Count
- uid: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}.IsReadOnly
  parent: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<IInterval>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<Marsop.Ephemeral.IInterval>.IsReadOnly
  nameWithType.vb: ICollection(Of IInterval).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of Marsop.Ephemeral.IInterval).IsReadOnly
- uid: System.Collections.Generic.IEnumerable{Marsop.Ephemeral.IInterval}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Marsop.Ephemeral.IInterval}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Marsop.Ephemeral.IInterval}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IInterval>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Marsop.Ephemeral.IInterval>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IInterval).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Marsop.Ephemeral.IInterval).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IInterval>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Marsop.Ephemeral.IInterval>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IInterval).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Marsop.Ephemeral.IInterval).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Marsop.Ephemeral.IDisjointIntervalSet.Marsop.Ephemeral.IntervalSetExtensions.Covers(System.DateTimeOffset)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Covers(Marsop.Ephemeral.IDisjointIntervalSet,System.DateTimeOffset)
  parent: Marsop.Ephemeral.IntervalSetExtensions
  definition: Marsop.Ephemeral.IntervalSetExtensions.Covers(Marsop.Ephemeral.IDisjointIntervalSet,System.DateTimeOffset)
  name: Covers(DateTimeOffset)
  nameWithType: IntervalSetExtensions.Covers(DateTimeOffset)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Covers(System.DateTimeOffset)
  spec.csharp:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Covers(System.DateTimeOffset)
    name: Covers
    nameWithType: IntervalSetExtensions.Covers
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Covers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Covers(System.DateTimeOffset)
    name: Covers
    nameWithType: IntervalSetExtensions.Covers
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Covers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Marsop.Ephemeral.IDisjointIntervalSet.Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IDisjointIntervalSet)
  parent: Marsop.Ephemeral.IntervalSetExtensions
  definition: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IDisjointIntervalSet)
  name: Join(IDisjointIntervalSet)
  nameWithType: IntervalSetExtensions.Join(IDisjointIntervalSet)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet)
  spec.csharp:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet)
    name: Join
    nameWithType: IntervalSetExtensions.Join
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet)
    name: Join
    nameWithType: IntervalSetExtensions.Join
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: )
    nameWithType: )
    fullName: )
- uid: Marsop.Ephemeral.IDisjointIntervalSet.Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IInterval)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  parent: Marsop.Ephemeral.IntervalSetExtensions
  definition: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  name: Join(IInterval)
  nameWithType: IntervalSetExtensions.Join(IInterval)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IInterval)
  spec.csharp:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IInterval)
    name: Join
    nameWithType: IntervalSetExtensions.Join
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IInterval)
    name: Join
    nameWithType: IntervalSetExtensions.Join
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
- uid: Marsop.Ephemeral.IDisjointIntervalSet.Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IInterval)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  parent: Marsop.Ephemeral.IntervalSetExtensions
  definition: Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  name: Intersect(IInterval)
  nameWithType: IntervalSetExtensions.Intersect(IInterval)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IInterval)
  spec.csharp:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IInterval)
    name: Intersect
    nameWithType: IntervalSetExtensions.Intersect
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Intersect
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IInterval)
    name: Intersect
    nameWithType: IntervalSetExtensions.Intersect
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Intersect
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
- uid: Marsop.Ephemeral.IDisjointIntervalSet.Marsop.Ephemeral.IntervalSetExtensions.Consolidate
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Consolidate(Marsop.Ephemeral.IDisjointIntervalSet)
  parent: Marsop.Ephemeral.IntervalSetExtensions
  definition: Marsop.Ephemeral.IntervalSetExtensions.Consolidate(Marsop.Ephemeral.IDisjointIntervalSet)
  name: Consolidate()
  nameWithType: IntervalSetExtensions.Consolidate()
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Consolidate()
  spec.csharp:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Consolidate
    name: Consolidate
    nameWithType: IntervalSetExtensions.Consolidate
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Consolidate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Consolidate
    name: Consolidate
    nameWithType: IntervalSetExtensions.Consolidate
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Consolidate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}
  commentId: T:System.Collections.Generic.IList{Marsop.Ephemeral.IInterval}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IInterval>
  nameWithType: IList<IInterval>
  fullName: System.Collections.Generic.IList<Marsop.Ephemeral.IInterval>
  nameWithType.vb: IList(Of IInterval)
  fullName.vb: System.Collections.Generic.IList(Of Marsop.Ephemeral.IInterval)
  name.vb: IList(Of IInterval)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}
  commentId: T:System.Collections.Generic.ICollection{Marsop.Ephemeral.IInterval}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IInterval>
  nameWithType: ICollection<IInterval>
  fullName: System.Collections.Generic.ICollection<Marsop.Ephemeral.IInterval>
  nameWithType.vb: ICollection(Of IInterval)
  fullName.vb: System.Collections.Generic.ICollection(Of Marsop.Ephemeral.IInterval)
  name.vb: ICollection(Of IInterval)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Marsop.Ephemeral.IInterval}
  commentId: T:System.Collections.Generic.IEnumerable{Marsop.Ephemeral.IInterval}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IInterval>
  nameWithType: IEnumerable<IInterval>
  fullName: System.Collections.Generic.IEnumerable<Marsop.Ephemeral.IInterval>
  nameWithType.vb: IEnumerable(Of IInterval)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Marsop.Ephemeral.IInterval)
  name.vb: IEnumerable(Of IInterval)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
- uid: Marsop.Ephemeral.IntervalSetExtensions.Covers(Marsop.Ephemeral.IDisjointIntervalSet,System.DateTimeOffset)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Covers(Marsop.Ephemeral.IDisjointIntervalSet,System.DateTimeOffset)
  isExternal: true
  name: Covers(IDisjointIntervalSet, DateTimeOffset)
  nameWithType: IntervalSetExtensions.Covers(IDisjointIntervalSet, DateTimeOffset)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Covers(Marsop.Ephemeral.IDisjointIntervalSet, System.DateTimeOffset)
  spec.csharp:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Covers(Marsop.Ephemeral.IDisjointIntervalSet,System.DateTimeOffset)
    name: Covers
    nameWithType: IntervalSetExtensions.Covers
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Covers
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Covers(Marsop.Ephemeral.IDisjointIntervalSet,System.DateTimeOffset)
    name: Covers
    nameWithType: IntervalSetExtensions.Covers
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Covers
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Marsop.Ephemeral.IntervalSetExtensions
  commentId: T:Marsop.Ephemeral.IntervalSetExtensions
  parent: Marsop.Ephemeral
  name: IntervalSetExtensions
  nameWithType: IntervalSetExtensions
  fullName: Marsop.Ephemeral.IntervalSetExtensions
- uid: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IDisjointIntervalSet)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IDisjointIntervalSet)
  name: Join(IDisjointIntervalSet, IDisjointIntervalSet)
  nameWithType: IntervalSetExtensions.Join(IDisjointIntervalSet, IDisjointIntervalSet)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet, Marsop.Ephemeral.IDisjointIntervalSet)
  spec.csharp:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IDisjointIntervalSet)
    name: Join
    nameWithType: IntervalSetExtensions.Join
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IDisjointIntervalSet)
    name: Join
    nameWithType: IntervalSetExtensions.Join
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: )
    nameWithType: )
    fullName: )
- uid: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  name: Join(IDisjointIntervalSet, IInterval)
  nameWithType: IntervalSetExtensions.Join(IDisjointIntervalSet, IInterval)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet, Marsop.Ephemeral.IInterval)
  spec.csharp:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
    name: Join
    nameWithType: IntervalSetExtensions.Join
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Join(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
    name: Join
    nameWithType: IntervalSetExtensions.Join
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
- uid: Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
  name: Intersect(IDisjointIntervalSet, IInterval)
  nameWithType: IntervalSetExtensions.Intersect(IDisjointIntervalSet, IInterval)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IDisjointIntervalSet, Marsop.Ephemeral.IInterval)
  spec.csharp:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
    name: Intersect
    nameWithType: IntervalSetExtensions.Intersect
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Intersect
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Intersect(Marsop.Ephemeral.IDisjointIntervalSet,Marsop.Ephemeral.IInterval)
    name: Intersect
    nameWithType: IntervalSetExtensions.Intersect
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Intersect
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Marsop.Ephemeral.IInterval
    name: IInterval
    nameWithType: IInterval
    fullName: Marsop.Ephemeral.IInterval
  - name: )
    nameWithType: )
    fullName: )
- uid: Marsop.Ephemeral.IntervalSetExtensions.Consolidate(Marsop.Ephemeral.IDisjointIntervalSet)
  commentId: M:Marsop.Ephemeral.IntervalSetExtensions.Consolidate(Marsop.Ephemeral.IDisjointIntervalSet)
  name: Consolidate(IDisjointIntervalSet)
  nameWithType: IntervalSetExtensions.Consolidate(IDisjointIntervalSet)
  fullName: Marsop.Ephemeral.IntervalSetExtensions.Consolidate(Marsop.Ephemeral.IDisjointIntervalSet)
  spec.csharp:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Consolidate(Marsop.Ephemeral.IDisjointIntervalSet)
    name: Consolidate
    nameWithType: IntervalSetExtensions.Consolidate
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Consolidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Marsop.Ephemeral.IntervalSetExtensions.Consolidate(Marsop.Ephemeral.IDisjointIntervalSet)
    name: Consolidate
    nameWithType: IntervalSetExtensions.Consolidate
    fullName: Marsop.Ephemeral.IntervalSetExtensions.Consolidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Marsop.Ephemeral.IDisjointIntervalSet
    name: IDisjointIntervalSet
    nameWithType: IDisjointIntervalSet
    fullName: Marsop.Ephemeral.IDisjointIntervalSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Marsop.Ephemeral.IDisjointIntervalSet.IsContiguous*
  commentId: Overload:Marsop.Ephemeral.IDisjointIntervalSet.IsContiguous
  name: IsContiguous
  nameWithType: IDisjointIntervalSet.IsContiguous
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.IsContiguous
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Marsop.Ephemeral.IDisjointIntervalSet.AggregatedDuration*
  commentId: Overload:Marsop.Ephemeral.IDisjointIntervalSet.AggregatedDuration
  name: AggregatedDuration
  nameWithType: IDisjointIntervalSet.AggregatedDuration
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.AggregatedDuration
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Marsop.Ephemeral.IDisjointIntervalSet.Start*
  commentId: Overload:Marsop.Ephemeral.IDisjointIntervalSet.Start
  name: Start
  nameWithType: IDisjointIntervalSet.Start
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.Start
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Marsop.Ephemeral.IDisjointIntervalSet.End*
  commentId: Overload:Marsop.Ephemeral.IDisjointIntervalSet.End
  name: End
  nameWithType: IDisjointIntervalSet.End
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.End
- uid: Marsop.Ephemeral.IDisjointIntervalSet.StartIncluded*
  commentId: Overload:Marsop.Ephemeral.IDisjointIntervalSet.StartIncluded
  name: StartIncluded
  nameWithType: IDisjointIntervalSet.StartIncluded
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.StartIncluded
- uid: Marsop.Ephemeral.IDisjointIntervalSet.EndIncluded*
  commentId: Overload:Marsop.Ephemeral.IDisjointIntervalSet.EndIncluded
  name: EndIncluded
  nameWithType: IDisjointIntervalSet.EndIncluded
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.EndIncluded
- uid: Marsop.Ephemeral.IDisjointIntervalSet.GetBoundingInterval*
  commentId: Overload:Marsop.Ephemeral.IDisjointIntervalSet.GetBoundingInterval
  name: GetBoundingInterval
  nameWithType: IDisjointIntervalSet.GetBoundingInterval
  fullName: Marsop.Ephemeral.IDisjointIntervalSet.GetBoundingInterval
- uid: Marsop.Ephemeral.IInterval
  commentId: T:Marsop.Ephemeral.IInterval
  parent: Marsop.Ephemeral
  name: IInterval
  nameWithType: IInterval
  fullName: Marsop.Ephemeral.IInterval
