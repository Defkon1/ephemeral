### YamlMime:ManagedReference
items:
- uid: Marsop.Ephemeral.OverlapException
  commentId: T:Marsop.Ephemeral.OverlapException
  id: OverlapException
  parent: Marsop.Ephemeral
  children:
  - Marsop.Ephemeral.OverlapException.#ctor
  - Marsop.Ephemeral.OverlapException.#ctor(System.String)
  - Marsop.Ephemeral.OverlapException.#ctor(System.String,System.Exception)
  - Marsop.Ephemeral.OverlapException.#ctor(System.String,System.String)
  - Marsop.Ephemeral.OverlapException.#ctor(System.String,System.String,System.Exception)
  langs:
  - csharp
  - vb
  name: OverlapException
  nameWithType: OverlapException
  fullName: Marsop.Ephemeral.OverlapException
  type: Class
  source:
    remote:
      path: Exception/OverlapException.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: OverlapException
    path: Exception/OverlapException.cs
    startLine: 4
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  syntax:
    content: 'public class OverlapException : ArgumentException, ISerializable'
    content.vb: >-
      Public Class OverlapException
          Inherits ArgumentException
          Implements ISerializable
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.ArgumentException
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.ArgumentException.Message
  - System.ArgumentException.ParamName
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.ToString
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Marsop.Ephemeral.OverlapException.#ctor
  commentId: M:Marsop.Ephemeral.OverlapException.#ctor
  id: '#ctor'
  parent: Marsop.Ephemeral.OverlapException
  langs:
  - csharp
  - vb
  name: OverlapException()
  nameWithType: OverlapException.OverlapException()
  fullName: Marsop.Ephemeral.OverlapException.OverlapException()
  type: Constructor
  source:
    remote:
      path: Exception/OverlapException.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: .ctor
    path: Exception/OverlapException.cs
    startLine: 6
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  syntax:
    content: public OverlapException()
    content.vb: Public Sub New
  overload: Marsop.Ephemeral.OverlapException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Marsop.Ephemeral.OverlapException.#ctor(System.String)
  commentId: M:Marsop.Ephemeral.OverlapException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Marsop.Ephemeral.OverlapException
  langs:
  - csharp
  - vb
  name: OverlapException(String)
  nameWithType: OverlapException.OverlapException(String)
  fullName: Marsop.Ephemeral.OverlapException.OverlapException(System.String)
  type: Constructor
  source:
    remote:
      path: Exception/OverlapException.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: .ctor
    path: Exception/OverlapException.cs
    startLine: 8
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  syntax:
    content: public OverlapException(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub New(message As String)
  overload: Marsop.Ephemeral.OverlapException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Marsop.Ephemeral.OverlapException.#ctor(System.String,System.String)
  commentId: M:Marsop.Ephemeral.OverlapException.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Marsop.Ephemeral.OverlapException
  langs:
  - csharp
  - vb
  name: OverlapException(String, String)
  nameWithType: OverlapException.OverlapException(String, String)
  fullName: Marsop.Ephemeral.OverlapException.OverlapException(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Exception/OverlapException.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: .ctor
    path: Exception/OverlapException.cs
    startLine: 10
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  syntax:
    content: public OverlapException(string message, string paramName)
    parameters:
    - id: message
      type: System.String
    - id: paramName
      type: System.String
    content.vb: Public Sub New(message As String, paramName As String)
  overload: Marsop.Ephemeral.OverlapException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Marsop.Ephemeral.OverlapException.#ctor(System.String,System.Exception)
  commentId: M:Marsop.Ephemeral.OverlapException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: Marsop.Ephemeral.OverlapException
  langs:
  - csharp
  - vb
  name: OverlapException(String, Exception)
  nameWithType: OverlapException.OverlapException(String, Exception)
  fullName: Marsop.Ephemeral.OverlapException.OverlapException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: Exception/OverlapException.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: .ctor
    path: Exception/OverlapException.cs
    startLine: 12
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  syntax:
    content: public OverlapException(string message, Exception innerException)
    parameters:
    - id: message
      type: System.String
    - id: innerException
      type: System.Exception
    content.vb: Public Sub New(message As String, innerException As Exception)
  overload: Marsop.Ephemeral.OverlapException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Marsop.Ephemeral.OverlapException.#ctor(System.String,System.String,System.Exception)
  commentId: M:Marsop.Ephemeral.OverlapException.#ctor(System.String,System.String,System.Exception)
  id: '#ctor(System.String,System.String,System.Exception)'
  parent: Marsop.Ephemeral.OverlapException
  langs:
  - csharp
  - vb
  name: OverlapException(String, String, Exception)
  nameWithType: OverlapException.OverlapException(String, String, Exception)
  fullName: Marsop.Ephemeral.OverlapException.OverlapException(System.String, System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: Exception/OverlapException.cs
      branch: master
      repo: https://github.com/marsop/ephemeral.git
    id: .ctor
    path: Exception/OverlapException.cs
    startLine: 14
  assemblies:
  - Marsop.Ephemeral
  namespace: Marsop.Ephemeral
  syntax:
    content: public OverlapException(string message, string paramName, Exception innerException)
    parameters:
    - id: message
      type: System.String
    - id: paramName
      type: System.String
    - id: innerException
      type: System.Exception
    content.vb: Public Sub New(message As String, paramName As String, innerException As Exception)
  overload: Marsop.Ephemeral.OverlapException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Marsop.Ephemeral
  commentId: N:Marsop.Ephemeral
  name: Marsop.Ephemeral
  nameWithType: Marsop.Ephemeral
  fullName: Marsop.Ephemeral
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.SystemException
  commentId: T:System.SystemException
  parent: System
  isExternal: true
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ArgumentException
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ArgumentException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ArgumentException.GetObjectData
    fullName: System.ArgumentException.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ArgumentException.GetObjectData
    fullName: System.ArgumentException.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentException.Message
  commentId: P:System.ArgumentException.Message
  parent: System.ArgumentException
  isExternal: true
  name: Message
  nameWithType: ArgumentException.Message
  fullName: System.ArgumentException.Message
- uid: System.ArgumentException.ParamName
  commentId: P:System.ArgumentException.ParamName
  parent: System.ArgumentException
  isExternal: true
  name: ParamName
  nameWithType: ArgumentException.ParamName
  fullName: System.ArgumentException.ParamName
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Marsop.Ephemeral.OverlapException.#ctor*
  commentId: Overload:Marsop.Ephemeral.OverlapException.#ctor
  name: OverlapException
  nameWithType: OverlapException.OverlapException
  fullName: Marsop.Ephemeral.OverlapException.OverlapException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
